API link: https://quiet-beyond-16034.herokuapp.com
--------------------------------------------------
POST /register
input:
body: {
  user: {
    email: ,
    password: ,
    profile: {
      fullName:
    }
  }
}
response:
body: {
 user: all user info
}
header: {
  x-auth: the token
}
--------------------------------------------------
POST /login
input:
body: {
  email: ,
  password:
}
response:
body: {
 user: all user info
}
header: {
  x-auth: the token
}
--------------------------------------------------
Needless to say, you need to include the token in the request header for all
the coming requests
--------------------------------------------------
GET /announcements
response:
body: {
  announcements: all announcements
}
this could be modified to get the latest announcement only if you think that is
more practical
--------------------------------------------------
POST /announcement
input:
body: {
  announcement: {
    title: ,
    description:
  }
}
response
body: {
  announcement:
}
response will have status 400 if title or description were not supplied
--------------------------------------------------
GET /tags
response:
body: {
  tags: all tags
}
--------------------------------------------------
POST /tag
input:
body: {
  tag: {
    tag:
  }
}
response:
body: {
  tag:
}
response will have status 400 if tag was not supplied
--------------------------------------------------
DELETE /tag/:id

response:
body: {
  tag:
}
--------------------------------------------------
DELETE /announcement/:id

response:
body: {
  announcement:
}
--------------------------------------------------
POST /changePassword

input:
body: {
 user: {
  oldPassword: ,
  newPassword:
 }
}
response: {
body: {
  updatedUser:
 }
}
res will have status 400 if oldPassword is wrong
--------------------------------------------------
POST /editProfile

input:
body: {
 user: {
  profile:
   fullName/description/achievements/interests/expertIn:
 }
}
response: {
body: {
  updatedUser:
 }
}
--------------------------------------------------
POST /logout
just pass the token in the header and it will be deleted
--------------------------------------------------
GET /OfficeHours
response:
{
  body: {
    officeHours: []
  }
}
--------------------------------------------------
GET /OfficeHour/:id
response:
{
  body: {
    officeHour: []
  }
}
Response with status 404 will be returned if you try to access
an office hour unrelated to you
--------------------------------------------------
POST /searchExperts
input:
body: {
  tags: array of strings
}
response:
body: {
  experts: array of experts with _id and profile.fullName only
}
pass an empty array when initializing the component and the user's
interest will be automatically used
--------------------------------------------------
POST /officeHour
input:
body: {
  experts: [],
  title:
  description:
}
response:
status 200 success
status 400 missing info or incorrect number of experts
